/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Calculation;

import javax.swing.JOptionPane;

/**
 *
 * @author S347095960
 */
public class Wdopler extends javax.swing.JFrame {
    
    double f1;
    double f2;
    double v1;
    double v2;
    
    /**
     * Creates new form Wdopler
     */
    public Wdopler() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        enter = new javax.swing.JButton();
        f1Val = new javax.swing.JTextField();
        v1Val = new javax.swing.JTextField();
        f2Val = new javax.swing.JTextField();
        v2Val = new javax.swing.JTextField();
        ans = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel1.setText("f1 Value");

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel2.setText("vsource Value");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel3.setText("f2 = f1(vsound/(vsound Â± vsource))");

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel5.setText("Formula:");

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel6.setText("f2 Value");

        jLabel7.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jLabel7.setText("vsound Value");

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel8.setText("Answer");

        enter.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        enter.setText("Enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        f1Val.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        v1Val.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        f2Val.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        v2Val.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        ans.setBackground(new java.awt.Color(240, 240, 240));
        ans.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "away (+)", "towards (-)" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(v1Val, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(v2Val, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(f2Val, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(f1Val, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(ans, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addContainerGap(93, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(f1Val, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ans, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(v1Val, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(v2Val, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f2Val, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(enter)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        try { 
        //if f2 is unknown and away is selected
        if ("".equals(f2Val.getText()) && "away (+)".equals(combo.getSelectedItem())) {
            
            v2=Double.parseDouble(v2Val.getText());
            f1=Double.parseDouble(f1Val.getText());
            v1=Double.parseDouble(v1Val.getText());
            f2 = f1*(v1/v1 + v2);
            ans.setText(String.format("f2= %.2f", f2));
        
        //if f2 is unknown and towards is selected
        } else if ("".equals(f2Val.getText()) && "towards (-)".equals(combo.getSelectedItem())) {
            
            v2=Double.parseDouble(v2Val.getText());
            f1=Double.parseDouble(f1Val.getText());
            v1=Double.parseDouble(v1Val.getText());
            f2 = f1*(v1/v1 - v2);
            ans.setText(String.format("f2= %.2f", f2));
            
            //if f1 is unknown and away is selected
            } else if ("".equals(f1Val.getText()) && "away (+)".equals(combo.getSelectedItem())) { 
                
                v2=Double.parseDouble(v2Val.getText());
                f2=Double.parseDouble(f2Val.getText());
                v1=Double.parseDouble(v1Val.getText());
                f1 = f2*(v1 + v2)/v1;
                ans.setText(String.format("f1= %.2f", f1));
            
            //if f1 is unknown and towards is selected
            } else if ("".equals(f1Val.getText()) && "towards (-)".equals(combo.getSelectedItem())) { 

            v2=Double.parseDouble(v2Val.getText());
            f2=Double.parseDouble(f2Val.getText());
            v1=Double.parseDouble(v1Val.getText());
            f1 = f2*(v1 - v2)/v1;
            ans.setText(String.format("f1= %.2f", f1));
                
            //if v2 is unknown and away is selected
            } else if ("".equals(v2Val.getText()) && "away (+)".equals(combo.getSelectedItem())) {
                
                f1=Double.parseDouble(f1Val.getText());
                f2=Double.parseDouble(f2Val.getText());
                v1=Double.parseDouble(v1Val.getText());
                v2 = ((f1*v1)/f2)-v1;
                ans.setText(String.format("v2= %.2f", v2));
                
            //if v2 is unknown and towards is selected
            } else if ("".equals(v2Val.getText()) && "towards (-)".equals(combo.getSelectedItem())) {
                
                f1=Double.parseDouble(f1Val.getText());
                f2=Double.parseDouble(f2Val.getText());
                v1=Double.parseDouble(v1Val.getText());
                v2 = -((f1*v1)/f2)-v1;
                ans.setText(String.format("v2= %.2f", v2));
               
            //if v1 is unknown and away is selected
            } else if ("".equals(v1Val.getText()) && "away (+)".equals(combo.getSelectedItem())) {
                
                f1=Double.parseDouble(f1Val.getText());
                f2=Double.parseDouble(f2Val.getText());
                v2=Double.parseDouble(v2Val.getText());
                v1 = (f2*v2)/(f1-f2);
                ans.setText(String.format("v2= %.2f", v2));
                
            //if v1 is unknown and towards is selected
            } else if ("".equals(v1Val.getText()) && "towards (-)".equals(combo.getSelectedItem())) {
                
                f1=Double.parseDouble(f1Val.getText());
                f2=Double.parseDouble(f2Val.getText());
                v2=Double.parseDouble(v2Val.getText());
                v1 = -(f2*v2)/(f1-f2);
                ans.setText(String.format("v2= %.2f", v2));
                
                //if anything else happens then its invalid
            } else {
                JOptionPane.showMessageDialog(null, "Invalid variable");
            }
      } catch (Exception e) {
          JOptionPane.showMessageDialog(null, "Invalid variable");
      }
    }//GEN-LAST:event_enterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Wdopler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Wdopler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Wdopler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wdopler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Wdopler().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ans;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JButton enter;
    private javax.swing.JTextField f1Val;
    private javax.swing.JTextField f2Val;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField v1Val;
    private javax.swing.JTextField v2Val;
    // End of variables declaration//GEN-END:variables
}
